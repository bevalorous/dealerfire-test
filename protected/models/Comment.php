<?phprequire_once('base/Model.php');class Comment extends Model{        public function attributeNames()    {        return array(            'author',            'createTime',            'email',            'content',        );    }        private $_errors = array();            public static function findAll()    {        $result = array();        mysql_connect('localhost', 'root', '');        mysql_select_db('dealerfire_test');        $q = mysql_query('SELECT * FROM tbl_comment WHERE 1 = 1 ORDER BY createTime');        while ($row = mysql_fetch_assoc($q))        {            $comment = new Comment();            $comment->setAttributes($row);            $result[] = $comment;        }        return $result;    }               public function save($validate = true)    {        if ($validate && !$this->validate())            return false;        else        {            mysql_connect('localhost', 'root', '');            mysql_select_db('dealerfire_test');            mysql_query('INSERT INTO tbl_comment (author, email, content, createTime) VALUES ("'.$this->getAttribute('author').'", "'.$this->getAttribute('email').'", "'.$this->getAttribute('content').'", NOW())');            return true;        }            }            public function validate()    {        $this->_errors = array();                $author = trim($this->getAttribute('author'));        if (empty($author))            $this->_errors['author'][] = "Field 'Author' is required";        elseif (strlen($author)>100)               $this->_errors['author'][] = "Field 'Author' is too long (max = 100)";                    $emailPattern = '/^[a-zA-Z0-9!#$%&\'*+\\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+\\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$/';        $email = trim($this->getAttribute('email'));        if (empty($email))            $this->_errors['email'][] = "Field 'Email' is required";        elseif (strlen($email)>100)               $this->_errors['email'][] = "Field 'Email' is too long (max = 100)";        elseif (!preg_match($emailPattern, $email))            $this->_errors['email'][] = "Field 'Email' must be correct e-mail address";                    $content = trim($this->getAttribute('content'));        if (empty($content))            $this->_errors['content'][] = "Field 'Content' is required";                    return !count($this->_errors);                }        public function getError($attributeName)    {        $error = isset($this->_errors[$attributeName][0])? $this->_errors[$attributeName][0]: '';        return $error;    }}